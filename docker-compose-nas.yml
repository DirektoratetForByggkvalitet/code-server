networks:
  backend:

volumes:

services:
  codeserver:
    image: linuxserver/code-server:latest
    restart: unless-stopped
    privileged: true
    logging:
      driver: json-file
      options:
        max-file: 5
        max-size: 120m
    networks:
      - backend
    volumes:
      - ${CONFIG_DIR}:/config
      - code-server-custom-scripts:/custom-cont-init.d:ro
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: Europe/Oslo
      LC_ALL: nb_NO.UTF-8
      HASHED_PASSWORD: ${HASHED_PASSWORD}
      SUDO_PASSWORD_HASH: ${SUDO_PASSWORD_HASH}
      INSTALL_PACKAGES: lz4|bash|language-pack-nb-base
      DOCKER_MODS: linuxserver/mods:universal-package-install|linuxserver/mods:code-server-php-cli|linuxserver/mods:code-server-nodejs|linuxserver/mods:code-server-extension-arguments|linuxserver/mods:code-server-zsh
      VSCODE_EXTENSION_IDS: github.vscode-github-actions|nonoroazoro.syncing|ms-azuretools.vscode-docker|ms-vscode.azurecli|streetsidesoftware.code-spell-checker-norwegian-bokmal
      PHP_VERSION: 8.4
      PHP_EXTENSIONS: gd|opcache|curl|xml|zip|intl|bcmath|igbinary|redis|mbstring|mcrypt|bz2|dom|pdo|mysql|pgsql|odbc|sqlite3
      ENABLE_COMPOSER: yes
      NODEJS_MOD_VERSION: 23
      SHELL: /usr/bin/zsh
    expose:
      - 8443
    labels:
      traefik.enable: true
      traefik.http.routers.codeserver.rule: Host(`${HOSTNAME}`)
      traefik.http.routers.codeserver.entrypoints: https
      traefik.http.routers.codeserver.tls: true
      traefik.docker.network: backend
       
  frontend:
    image: library/traefik:latest
    restart: unless-stopped
    security_opt:
      - label=type:container_runtime_t
    environment:
      TZ: Europe/Oslo
      CF_DNS_API_TOKEN: ${CF_TOKEN}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:z
      - ${CONFIG_DIR}:/config
      - /etc/pve/local:/ssl:ro
    command:
      - "--providers.file.watch=true"
      - "--providers.file.filename=/config/traefik_nas.yml"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entryPoints.https.address=:${SSL_PORT}"
    networks:
      - backend
    ports:
      - 8080:8080
      - ${SSL_PORT}:8443
 
